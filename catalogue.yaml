- name: setup payment server
  hosts: payment
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable default nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      comment: Roboshop System user
      system: true
      shell: /sbin/nologin
      home: /app
 # safe to remove directory, because 2nd time if we run it download freshly. no error if does not exist
  - name: remove app directory
    ansible.builtin.file:
      path: /tmp/payment.zip
      state: absent

  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: delete payment file
    ansible.builtin.file:
      path: /tmp/payment.zip
      state: absent


  - name: download payment application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/payment-v3.zip
      dest: /tmp/payment.zip

  - name: extract payment applications
    ansible.builtin.unarchive:
      src: /tmp/payment.zip
      dest: /app
      remote_src: yes

  - name: install dependences
    community.general.npm:
      path: /app

  - name: copy payment service
    ansible.builtin.copy:
        src: payment.service
        dest: /etc/systemd/system/payment.service

  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
    
  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connect to mongodb payment
    ansible.builtin.command: mongosh mongodb.vydevops.space --quiet --eval "db.getMongo().getDBNames().indexOf('payment')"
    register: payment_output

  
  # - name: print payment database
  #   community.mongodb.mongodb_shell:
  #     login_host: mongosh mongodb.vydevops.space
  #     eval: db.getMongo().getDBNames().indexOf('payment')
  #   register: payment_output

  - name: print payment output
    ansible.builtin.debug:
      msg: "{{ payment_output }}"
    

  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.vydevops.space </app/db/master-data.js
    when: payment_output.stdout | int < 0

  # - name: start and enable payment
  #   ansible.builtin.service:
  #     name: payment
  #     enabled: yes
  #     state: started

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: payment
      enabled: true
      state: started
      daemon_reload: true

  